name: Generate HTML Notebooks

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write  # Allow write access to repository contents
  pages: write     # Allow write access to GitHub Pages

jobs:
  generate_html:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v2.3.1

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Check Disk Space (Before Cleanup)
        run: df -h
      - name: Cleanup Docker Space
        run: docker system prune -a --volumes -f
      - name: Clear BuildKit Cache
        run: rm -rf /var/lib/buildkit/*
      - name: Free disk space
        run: |
          # Disable swap (if it exists)
          sudo swapoff -a || true
          # Remove swapfile (if it exists)
          [ -f /swapfile ] && sudo rm -f /swapfile || true
          # Clean apt cache
          sudo apt clean
          # Remove Docker images, only if they exist
          docker images -q | xargs -r docker rmi || true  # 'xargs -r' will skip if no images are found
          # Clean up all unused Docker resources (images, containers, volumes)
          docker system prune -a --volumes -f || true
          # Show disk space after cleanup
          df -h
      - name: Check Disk Space (After Cleanup)
        run: df -h

      # Step 3: Pull the Docker image from Docker Hub
      - name: Pull Docker image
        run: docker pull ivanrodri2020/offlinerl:latest


      - name: Set permissions for workspace directory
        run: sudo chmod -R 777 ${{ github.workspace }}

      - name: Convert Notebooks to HTML
        run: |
          docker run --rm \
            -v /home/runner/work/offline-rl/offline-rl:/workspace \
            ivanrodri2020/offlinerl:latest \
            bash -c "cd /workspace/notebooks && jupyter nbconvert --to html  --NbConvertApp.exporter_class='nbconvert.exporters.html.HTMLExporter' --TemplateExporter.exclude_output=True --HTMLExporter.template=lab --embed-images *.ipynb"
#            bash -c "mkdir -p /workspace/html_files && chmod -R 777 /workspace/html_files && \
#            cp -r /workspace/notebooks/_static/images /workspace/html_files/ && \
#            cd /workspace/notebooks && jupyter nbconvert --to html --output-dir /workspace/html_files
#            --NbConvertApp.exporter_class='nbconvert.exporters.html.HTMLExporter' \
#            --TemplateExporter.exclude_input=True --TemplateExporter.exclude_output=True \
#            --HTMLExporter.template=lab --embed-images *.ipynb"
      - name: Verify Generated Files
        run: |
          echo "Listing contents of workspace/notebooks"
          ls -R workspace/notebooks
      - name: Create index.html
        run: |
          echo "<html><body><h1>My Jupyter Notebooks</h1><ul>" > ./notebooks/index.html
          for file in ./notebooks/*.html; do
            filename=$(basename $file)
            echo "<li><a href=\"$filename\">$filename</a></li>" >> ./notebooks/index.html
          done
          echo "</ul></body></html>" >> ./notebooks/index.html
        #run: |
        #  echo "<html><body><h1>My Jupyter Notebooks</h1><ul>" > ./html_files/index.html
        #  for file in ./html_files/*.html; do
        #    filename=$(basename $file)
        #    echo "<li><a href=\"$filename\">$filename</a></li>" >> ./html_files/index.html
        #  done
        #  echo "</ul></body></html>" >> ./html_files/index.html


      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./notebooks
